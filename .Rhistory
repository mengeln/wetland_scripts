install.packages("C:/Documents and Settings/gisuser/Desktop/ibiscore_0.1.zip", repos = NULL)
library(ibiscore)
rarify <- compile(rarify)
library(compiler)
rarify <- compile(rarify)
SoCal_IBI <- compile(SoCal_IBI)
testresults_SoCal <- SoCal_IBI(locationinfo, demo, DistinctCode=F, Grid=F, SampleDate=F, FieldReplicate=F)
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
load("C:/Documents and Settings/gisuser/Desktop/IBI scripts/ibi.RData")
load("C:/Documents and Settings/gisuser/Desktop/IBI scripts/NorCal_basemap.RData")
rm(testmap)
load("C:/Documents and Settings/gisuser/Desktop/IBI scripts/map.RData")
load("C:/Documents and Settings/gisuser/Desktop/IBI scripts/map2.RData")
load("C:/Documents and Settings/gisuser/Desktop/IBI scripts/taxonomy.RData")
package.skeleton(name="ibiscore", list=ls())
build(pkg="ibiscore", binary=T)
library(devtools)
build(pkg="ibiscore", binary=T)
install.packages("C:/Documents and Settings/gisuser/Desktop/ibiscore_0.1.zip", repos = NULL)
install.packages("C:/Documents and Settings/gisuser/Desktop/ibiscore_0.1.zip", repos = NULL)
setwd("C:/Documents and Settings/gisuser/Desktop/IBI scripts")
demo <- read.csv("Demo Data for IBI calculator.csv")
locationinfo <- read.csv("stationinfo.csv")
#source("L:\\Bioassessment Data Management Tools_RM\\R Scripts\\IBI scripts\\IBIscore_experimental.r")
library(ibiscore)
library(compiler)
rarify <- compile(rarify)
SoCal_IBI <- compile(SoCal_IBI)
#testresults_Nor <- NorCal_IBI(locationinfo, demo, DistinctCode=F, Grid=F, SampleDate=F, FieldReplicate=F)
testresults_SoCal <- SoCal_IBI(locationinfo, demo, DistinctCode=F, Grid=F, SampleDate=F, FieldReplicate=F)
traceback()
rm(list=ls())
setwd("C:/Documents and Settings/gisuser/Desktop")
source('L:/Bioassessment Data Management Tools_RM/R Scripts/IBI scripts/IBIscore_experimental.r', echo=TRUE)
load("C:/Documents and Settings/gisuser/Desktop/IBI scripts/ibi.RData")
load("C:/Documents and Settings/gisuser/Desktop/IBI scripts/map.RData")
load("C:/Documents and Settings/gisuser/Desktop/IBI scripts/map2.RData")
load("C:/Documents and Settings/gisuser/Desktop/IBI scripts/taxonomy.RData")
package.skeleton(name="ibiscore", binary=T)
package.skeleton(name="ibiscore", list=ls())
build(pkg="ibiscore", binary=T)
library(devtools)
build(pkg="ibiscore", binary=T)
install.packages("C:/Documents and Settings/gisuser/Desktop/ibiscore_0.1.zip", repos = NULL)
install.packages("C:/Documents and Settings/gisuser/Desktop/ibiscore_0.2.zip", repos = NULL)
setwd("P:/PartTimers/MarkEngeln/Wetlands Scripts")
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/ibi prelim.r', echo=TRUE)
View(data)
load("ibiv2.RData")
load("ibi.RData")
load("ibiv2.RData")
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/ibi prelim.r', echo=TRUE)
View(IBIv2)
View(IBIv2)
ibi$SAFIT
View(ibi)
View(IBIv2)
colnames(ibi)
ibi$FunctionalFeedingGroup
ibi$FinalID
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/ibi prelim.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/ibi prelim.r', echo=TRUE)
str(data)
View(data)
rm(list=ls())
read.table("clipboard", header=T)
?order
?cite
citation
citatin()
citation()
?round
c("StationCode", "SampleID", "Ecoregion", "Total Count", "Count Flag", "Number of Iteration",
"Number of Oligochaeta taxa", "Number of EOT Taxa", "Number of Scraper taxa", "Number of Predator Taxa",
"Percent Coleoptera", "Percent EOT", "Percent Tanypodinae to Chironomidae", "Percent Dominant",
"Oligochaeta Score", "EOT Taxa Score", "Scraper Score", "Predator Taxa Score",
"Coleoptera Score", "Percent EOT Score", "Percent Tanypodinae to Chironomidae Score", "Percent Dominant Score", "IBI Score")
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
traceback()
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
load("ibiv3.RData")
View(ibiv3)
ibiv3[ibiv3$CustomSTE == "Should be dropped. Also no data at this level in this dataset. "]
ibiv3[ibiv3$CustomSTE == "Should be dropped. Also no data at this level in this dataset. ",]
ibiv3 <- ibiv3[!(1:4160 %in% 4075),]
save(ibiv3)
save(ibiv3, file="ibiv3.rdata")
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
read.csv("taxonomy.csv")
taxonomy_v4 <- read.csv("taxonomy.csv")
save(taxonomy_v4, file="taxonomy_v4.rdata")
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
taxonomy_v4$FinalID[taxonomy$FinalID=="Acanthocyclops"]
taxonomy_v4$FinalID[taxonomy_v4$FinalID=="Acanthocyclops"]
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(metrics)
length(c(-1, 2:9, 100))
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(metrics)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
length(c(-1, 2, 3, 5, 7, 9, 100))
length(c(0, 1, 3, 4, 6, 7, 9, 10))
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
length(c(-1, 2, 4, 3, 5, 6, 7, 9, 100))
length(c(0, 1, 3, 4, 6, 7, 9, 10))
length(c(-1, .1, .3, .4, .6, .8, 1, 1.2, 1.4, 1.5, 1.7, 1.8))
length(c(-1, 6.2, 12.4, 18.7, 24.9, 31.2, 37.4, 43.7, 50, 56.2, 62.5))
length(c(-1, 3, 6.1, 9.2, 12.3, 15.4, 21.6, 24.7, 27.8, 30.9, 100))
length(c(-1, 3, 6.1, 9.2, 12.3, 15.4, 18.5, 21.6, 24.7, 27.8, 30.9, 100))
length(c(-1, 6.2, 12.4, 18.7, 24.9, 31.2, 37.4, 43.7, 50, 56.2, 62.5))
length(c(-1, .1, .3, .4, .6, .8, 1, 1.2, 1.4, 1.5, 1.7, 100))
length(c(-1, 65.3, 67.5, 69.8, 72, 74.2, 76.4, 78.6, 80.9, 83.1, 87.5, 87.6))
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
View(ibiv3)
source('~/.active-rstudio-document', echo=TRUE)
View(ibiv3)
View(ibiv3)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
View(ibiv3)
family <- read.delim("clipboard", header=T)
str(family)
?read.delim
family <- read.delim("clipboard", header=T, stringsAsFactors=F)
str(family)
ibiv3$Family <- family$Family[match(ibiv3$FinalID, family$FinalID),]
ibiv3$Family <- family$Family[match(ibiv3$FinalID, family$FinalID)]
View(ibiv3)
save(ibiv3, file="ibiv3.rdata")
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
View(metrics)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
View(metrics)
View(metrics[, 100:160])
View(results)
View(metrics)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
traceback()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(metrics)
View(metrics[, 101:160])
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
str(metrics)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
options(warn=2)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
traceback()
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
options(warn=0)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
2226/4
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
?daply
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(metrics)
metrics$Taxa[metrics$SAFIT=="Missing"]
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
View(metrics)
metrics$Taxa[metrics$SAFIT=="Missing"]
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
View(metrics)
metrics[metrics$FunctionalFeedingGroup =="P",]
metrics$SAFIT[metrics$FunctionalFeedingGroup =="P",]
metrics$SAFIT[metrics$FunctionalFeedingGroup =="P"]
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(metrics)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
length(unique(metrics$SAFIT[metrics$Order %in% c("Ephemeroptera", "Odonata", "Trichoptera")]))
length(unique(metrics$SAFIT[metrics$FunctionalFeedingGroup == "P"]))
View(results)
View(metrics)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
View(metrics)
source('~/.active-rstudio-document', echo=TRUE)
View(results)
View(metrics)
source('~/.active-rstudio-document', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
source('~/.active-rstudio-document', echo=TRUE)
warnings()
View(metrics)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(metrics)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
View(metrics)
seq(from=1, to=2, by=0.006)
times <- seq(from=1, to=2, by=0.006)
minutes <- round((times - round(times))/60, decimal=2)*100
minutes <- round((times - round(times))/60, digits=2)*100
minutes
(times - round(times))/60
round((times - round(times))*100/60, digits=2)*100
times <- seq(from=1, to=2, by=0.006)
minutes <- round((times - floor(times))*100/60, digits=2)*100
minutes
times - floor(times)
round((times - floor(times))*60/100, digits=2)*100
minutes <- round((times - floor(times))*60/100, digits=2)*100
times <- seq(from=1, to=2, by=0.006)
minutes <- round((times - floor(times))*60/100, digits=2)*100
paste(round(times), ":", minutes, sep="")
times
minutes <- trunc((times - floor(times))*60/100, digits=2)*100
paste(round(times), ":", minutes, sep="")
?trunc
times - floor(times))*60/100
(times - floor(times))*60/100
trunc((times - floor(times))*60/100, digits=2)
View(taxonomy_v4)
?case
?cases
?break
View(taxonomy_v4)
View(metrics)
View(metrics[metrics$StationCode == "903GJL000"])
View(metrics[metrics$StationCode == "903GJL000"],)
View(metrics[metrics$StationCode == "903GJL000",])
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
traceback()
source('~/.active-rstudio-document', echo=TRUE)
traceback()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(taxonomy_v4)
taxonomy_v4[,"Genus"]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
warnings()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
traceback()
warnings()
source('~/.active-rstudio-document', echo=TRUE)
traceback()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
warnings()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
traceback()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(results)
View(metrics)
View(metrics)
View(metrics)
View(results)
source('~/.active-rstudio-document', echo=TRUE)
View(results)
source('~/.active-rstudio-document', echo=TRUE)
View(results)
View(results)
View(metrics)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(metrics)
metrics$STE == "Missing"
metrics$Taxa[metrics$STE == "Missing"]
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
View(metrics)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(results)
View(metrics)
View(results)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
View(metrics)
View(results)
View(results)
write.csv(results, file=Wetlands_IBI_metrics.csv)
write.csv(results, file="Wetlands_IBI_metrics.csv")
source('P:/PartTimers/MarkEngeln/Wetlands Scripts/wetland_metrics.r', echo=TRUE)
write.csv(results, file="Wetlands_IBI_metrics.csv")
?cut
n <- 10; nn <- 100
g <- factor(round(n * runif(n * nn)))
x <- rnorm(n * nn) + sqrt(as.numeric(g))
xg <- split(x, g)
xg
g
